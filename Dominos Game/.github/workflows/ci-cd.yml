name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: dominoes-game

jobs:
  build-and-push:
    name: Build and Push to DockerHub
    runs-on: ubuntu-latest
    
    outputs:
      image-tag: ${{ steps.image-info.outputs.tag }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Set image tag
        id: image-info
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "Building image with tag: ${IMAGE_TAG}"
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          
      - name: Test Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.tag }}
          docker run -d -p 8080:8080 --name test ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.tag }}
          sleep 10
          curl -f http://localhost:8080/health || exit 1
          docker stop test
          echo "âœ… Health check passed!"

  update-helm-values:
    name: Update Helm Values
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update Helm values with new image
        env:
          IMAGE_TAG: ${{ needs.build-and-push.outputs.image-tag }}
        run: |
          # Update values-prod.yaml with new image
          sed -i "s|repository:.*|repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}|g" helm/dominoes-game/values-prod.yaml
          sed -i "s|tag:.*|tag: \"$IMAGE_TAG\"|g" helm/dominoes-game/values-prod.yaml
          
          echo "Updated values-prod.yaml with image: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG"
          
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          git add helm/dominoes-game/values-prod.yaml
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update image tag to ${{ needs.build-and-push.outputs.image-tag }} [skip ci]"
            git push
          fi